{"version":3,"sources":["Component/PollForm/Form.jsx","Component/PollForm/Index.jsx","Component/Maincontent/ParticpateForm.jsx","Component/Maincontent/Index.jsx","Component/Slidebar/PollList.jsx","Component/Slidebar/Index.jsx","Data/Polls.js","App.jsx","reportWebVitals.js","index.js"],"names":["MyForm","title","description","options","errors","buttonValue","handelChange","handleOptionsChange","createOptions","deleteOption","handleSubmit","Form","onSubmit","FormGroup","for","Input","name","id","placeholder","value","onChange","invalid","FormFeedback","type","style","marginLeft","background","color","padding","borderRadius","cursor","onClick","map","opt","index","className","e","Button","disabled","length","defaultOptions","shortid","generate","vlaue","vote","PollForm","state","event","setState","target","push","alert","splice","preventDefault","validate","isValid","poll","props","isUpdate","submit","reset","optionErros","forEach","Object","keys","this","Component","PartiicpateForm","selectedOption","hanleChange","isvalid","getOpinion","pollId","console","log","toggleModal","deletePoll","CustomInput","totalVote","toFixed","MainContent","openModal","updatePoll","Modal","isOpen","toggle","unmountOnClose","ModalHeader","ModalBody","PollList","polls","ListGroup","ListGroupItem","selectPoll","substr","Sidebar","searchTerm","handleSearch","addNewPoll","created","Date","opinions","App","selectedPoll","concat","updatedPoll","find","p","filter","performSearch","toLowerCase","includes","response","o","opinion","POLLS","Container","Row","Col","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c496ecb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormFeedback, FormGroup, Input } from 'reactstrap'\r\n\r\nlet MyForm=({\r\n    title,description,options,errors,buttonValue,handelChange, handleOptionsChange, createOptions, deleteOption,handleSubmit\r\n})=>(\r\n     <Form onSubmit={handleSubmit}>\r\n         <FormGroup>\r\n             <label for='title'>Title</label>\r\n             <Input\r\n             name='title'\r\n             id='title'\r\n             placeholder='A Dummy Title' \r\n             value={title}\r\n             onChange={handelChange}\r\n             invalid={errors.title? true:false}\r\n             />\r\n             {errors.title && <FormFeedback>{errors.title}</FormFeedback>}\r\n         </FormGroup>\r\n         <FormGroup>\r\n             <label for='description'>Description</label>\r\n             <Input\r\n             name='description'\r\n             type='textarea'\r\n             id='description'\r\n             placeholder='Description  Your Poll' \r\n             value={description}\r\n             onChange={handelChange}\r\n             invalid={errors.description? true:false}\r\n             />\r\n             {errors.description && <FormFeedback>{errors.description}</FormFeedback>}\r\n         </FormGroup>\r\n\r\n         <FormGroup>\r\n             <label>\r\n                 enter Your Options\r\n                 <span\r\n                 style={{\r\n                     marginLeft:'30px',\r\n                     background:'green',\r\n                     color:'white',\r\n                     padding:'5px',\r\n                     borderRadius:'5px',\r\n                     cursor:'pointer'\r\n                }}\r\n                onClick={createOptions}\r\n                 >Add Option</span>\r\n             </label>\r\n             {\r\n                 options.map((opt,index)=>(\r\n                     <div key={opt.id} className='d-flex my-2'>\r\n                         <Input \r\n                         value={opt.value}\r\n                         onChange={e=>handleOptionsChange(e,index)}\r\n                         invalid={\r\n                             errors.options && errors.options[index] ? true:false\r\n                         }\r\n                         />\r\n                         <Button\r\n                            color='danger'\r\n                            disabled={options.length<=2}\r\n                            className='ml-2'\r\n                            onClick={()=>deleteOption(index)}\r\n                         >\r\n                                    Delete\r\n                         </Button>\r\n                     </div>\r\n                 ))\r\n             }\r\n         </FormGroup>\r\n             <Button>\r\n                 {buttonValue}\r\n             </Button>\r\n     </Form>\r\n)\r\nexport default MyForm;","import React, { Component } from 'react';\r\nimport shortid from 'short-id';\r\nimport MyForm from './Form';\r\n\r\nlet defaultOptions=[\r\n{id:shortid.generate(), vlaue:'',vote:0},\r\n{id:shortid.generate(), vlaue:'',vote:0}\r\n]\r\nexport class PollForm extends Component {\r\n    state={\r\n        title:'',\r\n        description:'',\r\n        options:defaultOptions,\r\n        errors:{}\r\n    };\r\n\r\n    componentDidMount(){\r\n        let {poll}=this.props\r\n        if(poll && Object.keys(poll).length>0){\r\n            this.setState({\r\n                title:poll.title,\r\n                description:poll.description,\r\n                options:poll.options\r\n            })\r\n        }\r\n    }\r\n\r\n    handelChange=event=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value \r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    handleOptionsChange=(event, index)=>{\r\n        let  {options}=this.state\r\n        options[index].value=event.target.value\r\n        this.setState({\r\n            options\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    createOptions=()=>{\r\n        let  {options}=this.state\r\n        if(options.length<5){\r\n        options.push({\r\n            id:shortid.generate(),\r\n            value:'',\r\n            vote:0\r\n       \r\n        });\r\n        this.setState({\r\n            options\r\n        }) \r\n        } else{\r\n            alert('You can Create Max 5 Options')\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    deleteOption=index=>{\r\n        let  {options}=this.state\r\n        if(options.length > 2){\r\n            options.splice(index,1)\r\n            this.setState({\r\n                options\r\n            })\r\n        } else{\r\n            alert('You must have at least Two Options')\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    handleSubmit =event=>{\r\n        event.preventDefault()\r\n        let {isValid,errors}=this.validate()\r\n        if(isValid){\r\n            let {title,description,options}=this.state;\r\n            let poll={\r\n                title,\r\n                description,\r\n                options\r\n            }\r\n            if(this.props.isUpdate){\r\n                poll.id=this.props.poll.id\r\n                this.props.submit(poll)\r\n                alert('Updated Successfully')\r\n            }\r\n            else{\r\n                this.props.submit(poll)\r\n            event.target.reset()\r\n            this.setState({\r\n                title:'',\r\n                description:'',\r\n                options:defaultOptions\r\n            })\r\n            }\r\n            \r\n        } else{\r\n            this.setState({\r\n                errors\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    validate =()=>{\r\n        let errors={}\r\n        let {title,description,options}=this.state\r\n\r\n        if(!title){\r\n            errors.title='Please Provide A Title'\r\n        } else if(title.length<20){\r\n            errors.title='Title Too short'\r\n        } else if (!title.length>100){\r\n            errors.title='Title Too Long'\r\n        }\r\n        if(!description){\r\n            errors.description='Please Provide A Description'\r\n        } else if(!description.length>500){\r\n            errors.description='description Too long'\r\n        }\r\n        let optionErros=[]\r\n        options.forEach((opt,index) =>{\r\n            if(!opt.value){\r\n                optionErros[index]='Option Text Empty'\r\n             //  optionErros.push('Option Text Empty')\r\n            } else if(opt.value.length>100){\r\n                optionErros[index]='Option Text Too Long'\r\n                //optionErros.push('Option Text Too Long')\r\n            }\r\n        })\r\n        if(optionErros.length > 0){\r\n            errors.options=optionErros\r\n        }\r\n        return {\r\n            errors,\r\n            isValid:Object.keys(errors).length==0\r\n        }\r\n    }\r\n    render() {\r\n        let {title,options,description,errors}=this.state\r\n        return (\r\n            <div>\r\n                 <MyForm\r\n                 title={title}\r\n                 description={description}\r\n                 options={options}\r\n                 buttonValue={this.props.buttonValue || 'create poll'}\r\n                 errors={errors}\r\n                 handelChange={this.handelChange}\r\n                 handleOptionsChange={this.handleOptionsChange}\r\n                 handleSubmit={this.handleSubmit}\r\n                 deleteOption={this.deleteOption}\r\n                 createOptions={this.createOptions}\r\n                  />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollForm\r\n","import React, { Component } from 'react'\r\nimport { Button, CustomInput, Form, FormFeedback, FormGroup, Input } from 'reactstrap'\r\n\r\nclass PartiicpateForm extends Component {\r\n   \r\n   \r\n    state={\r\n        name:'',\r\n        selectedOption:'',\r\n        errors:{}\r\n    }\r\n\r\n\r\n\r\n    hanleChange=event=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSubmit=event=>{\r\n        event.preventDefault();  \r\n        let {errors,isvalid} =this.validate()\r\n        if(isvalid){\r\n            this.props.getOpinion({\r\n                pollId:this.props.poll.id,\r\n                name:this.state.name,\r\n                selectedOption:this.state.selectedOption\r\n                \r\n            })\r\n            event.target.reset()\r\n            this.setState({\r\n                name:'',\r\n        selectedOption:'',\r\n        errors:{}\r\n            })\r\n\r\n        }else{\r\n            this.setState({\r\n                errors\r\n            })\r\n        }\r\n        console.log(event);\r\n    }\r\n\r\n\r\n\r\n    validate=()=>{\r\n        let errors={}\r\n        if(!this.state.name){\r\n            errors.name='Please Provide A Name'\r\n        } else if(this.state.name.length>20){\r\n            errors.name='Name To Long'\r\n        }\r\n        if(!this.state.selectedOption){\r\n            errors.selectedOption='Please Select One Option'\r\n        }\r\n        return {\r\n            errors,\r\n            isvalid:Object.keys(errors).length==0\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <div className='d-flex'>\r\n                    <h4>Options</h4>\r\n                    <Button\r\n                    color='warning'\r\n                    type='button'\r\n                    className='ml-auto'\r\n                    onClick={this.props.toggleModal}\r\n                    >\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                    color='danger'\r\n                    type='button'\r\n                    className='ml-2'\r\n                    onClick={()=>this.props.deletePoll(this.props.poll.id)}>\r\n                        Delete\r\n                    </Button>\r\n\r\n                </div>\r\n                {\r\n                    this.props.poll.options.map(opt=>(\r\n                        <FormGroup className='my-2' key={opt.id}>\r\n                            <label className='d-flex'>\r\n                                <CustomInput \r\n                                    type='radio'\r\n                                    id={opt.id}\r\n                                    name='selectedOption'\r\n                                    onChange={this.hanleChange}\r\n                                    value={opt.id}\r\n                                    invalid={this.state.errors.selectedOption? true:false}\r\n                                />\r\n                                {opt.value}\r\n                            </label>\r\n\r\n                            <span \r\n                            style={{\r\n                                padding:'5px 20px',\r\n                                background:'green',\r\n                                color:'white',\r\n                                borderRadius:'5px'\r\n\r\n                                }}\r\n                                className='ml-auto'\r\n                            >\r\n                                {opt.vote}\r\n                            </span>\r\n                            <span\r\n                             style={{\r\n                                  padding:'5px 20px',\r\n                                   background:'orange',\r\n                                   color:'white'}}\r\n                              className='ml-2'\r\n                            >\r\n                                {this.props.poll.totalVote>0 ? ((100*opt.vote)/ this.props.poll.totalVote).toFixed(2):0}\r\n                                %\r\n                            </span>\r\n\r\n                        </FormGroup>\r\n                    ))}\r\n                    <FormGroup className='my-3'>\r\n                        <label>\r\n                            Enter Your Name\r\n                        </label>\r\n                        <Input\r\n                        name='name'\r\n                        placeholder='Enter Your Name'\r\n                        value={this.state.value}\r\n                        onChange={this.hanleChange}\r\n                        invalid={this.state.errors.name ? true:false}\r\n                        />\r\n                        \r\n                        {this.state.errors.name &&(\r\n                            <FormFeedback>{this.state.errors.name}</FormFeedback>\r\n                        )}\r\n\r\n                    </FormGroup>\r\n                    <Button type='submit'> \r\n                            Submit Your Opinion\r\n                    </Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartiicpateForm;\r\n","import React, { Component } from 'react'\r\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap'\r\nimport PollForm from '../PollForm/Index'\r\nimport PartiicpateForm from './ParticpateForm'\r\n\r\nexport class MainContent extends Component {\r\n    state={\r\n        openModal:false\r\n    }\r\n    toggleModal=()=>{\r\n        this.setState({\r\n            openModal:!this.state.openModal\r\n        })\r\n    }\r\n    render() {\r\n        if(Object.keys(this.props.poll).length==0){\r\n            return (\r\n                <div>\r\n                    <h3>\r\n                        Welcome To My Application\r\n                    </h3>\r\n                    <p>\r\n                    You can create as many as you want. click the new button to create a new poll. to check detalis of a poll please select from the left sidebar.by selecting a poll you can check it's details, participate and check others opinion about this poll.\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        let {poll, getOpinion , updatePoll, deletePoll}=this.props\r\n        return (\r\n            <div>\r\n                <h3>{poll.title}</h3>\r\n                <p>{poll.description}</p>\r\n                <br/>\r\n                <PartiicpateForm\r\n                poll={poll}\r\n                getOpinion ={getOpinion }\r\n                toggleModal={this.toggleModal}\r\n                deletePoll={deletePoll}\r\n                updatePoll={updatePoll}\r\n                />\r\n                <Modal\r\n                isOpen={this.state.openModal}\r\n                toggle={this.toggleModal}\r\n                unmountOnClose={true}>\r\n                    <ModalHeader toggle={this.toggleModal} >\r\n                        Update Poll\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <PollForm\r\n                        poll={poll}\r\n                        isUpdate={true}\r\n                        submit={updatePoll}\r\n                        buttonValue='Update Poll'\r\n                        />\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContent\r\n","import React from 'react'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\nlet PollList = (props) => {\r\n    if (props.polls.length == 0) {\r\n        return <p>Ther is no Poll</p>\r\n    }\r\n    return(\r\n        <ListGroup>\r\n            {props.polls.map(poll=>(\r\n                <ListGroupItem\r\n                 key={poll.id}\r\n                 onClick={()=>props.selectPoll(poll.id)}\r\n                 style={{cursor:'pointer'}}\r\n\r\n                >\r\n                    {poll.title.length > 30 ? poll.title.substr(0,30) + '...'  :poll.title}\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n}\r\nexport default PollList;","import React, { Component } from 'react'\r\nimport { Button, Input,Modal, ModalBody, ModalHeader }from 'reactstrap';\r\nimport PollForm from '../PollForm/Index';\r\nimport PollList from './PollList';\r\n\r\nexport class Sidebar extends Component {\r\n    state={\r\n        openModal:false,\r\n    }\r\n    toggleModal=()=>{\r\n        this.setState({\r\n            openModal:!this.state.openModal\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={ {background:'#efefef',padding:'10px'}  }>\r\n                <div className='d-flex mb-5'>\r\n                    <Input \r\n                    type='search'\r\n                    placeholder='Search Your Created Poll'\r\n                    value={this.props.searchTerm}\r\n                    onChange={e=>this.props.handleSearch(e.target.value)}\r\n                    />\r\n                    <Button\r\n                    color='success'\r\n                    className='ml-2'\r\n                    onClick={this.toggleModal}>\r\n                        New\r\n                    </Button>\r\n\r\n                </div>\r\n            <h3>List of Polls</h3>\r\n            <hr/>\r\n            <PollList\r\n             poll={this.props.selectPoll}\r\n             polls={this.props.polls}\r\n             selectPoll={this.props.selectPoll}\r\n             />\r\n             <Modal isOpen={this.state.openModal} toggle={this.toggleModal} unmountOnClose={true}>\r\n            <ModalHeader toggle={this.toggleModal}>\r\n                Creeate A New Poll\r\n\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                 <PollForm submit={this.props.addNewPoll}/>\r\n            </ModalBody>\r\n             </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar\r\n","let polls=[\r\n    {\r\n        id:'01',\r\n        title:'What is your favourite programming language?',\r\n        description:'there are lot of popular programming languages available.Among them what is your favourite',\r\n        options:[\r\n            {id:'1a' , value:'C programming' ,vote:0},\r\n            {id:'1b' , value:'Java' ,vote:0},\r\n            {id:'1c' , value:'JavaScript' ,vote:0},\r\n            {id:'1d' , value:'Python' ,vote:0}\r\n        ],\r\n        created:new Date(),\r\n        totalVote:0,\r\n        opinions:[]\r\n    },\r\n    {\r\n        id:'02',\r\n        title:'What is your favourite frame work language?',\r\n        description:'there are lot of popular programming languages available.Among them what is your favourite',\r\n        options:[\r\n            {id:'2a' , value:'react.js' ,vote:0},\r\n            {id:'2b' , value:'jQuery' ,vote:0},\r\n            {id:'2c' , value:'Angular' ,vote:0},\r\n            {id:'2d' , value:'Python' ,vote:0}\r\n        ],\r\n        created:new Date(),\r\n        totalVote:0,\r\n        opinions:[]\r\n    }\r\n   \r\n]\r\nexport default polls;","import React, { Component } from 'react'\r\nimport { Col, Container, Row } from 'reactstrap'\r\nimport MainContent from './Component/Maincontent/Index'\r\nimport Sidebar from './Component/Slidebar/Index'\r\nimport POLLS from './Data/Polls'\r\nimport shortid from 'short-id'\r\n\r\nexport class App extends Component {\r\n    state={\r\n        polls:[],\r\n        selectedPoll:{},\r\n        searchTerm:''\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            polls:POLLS\r\n        })\r\n    }\r\n    addNewPoll=(poll)=>{\r\n        poll.id=shortid.generate();\r\n        poll.created= new Date();\r\n        poll.totalVote=0;\r\n        poll.opinions=[]\r\n        \r\n        this.setState({\r\n            polls:this.state.polls.concat(poll)\r\n        })\r\n    }\r\n    updatePoll=(updatedPoll)=>{\r\n        let polls =[...this.state.polls]\r\n        let poll=polls.find(p=>p.id==updatedPoll.id)\r\n\r\n        polls.title=updatedPoll.title;\r\n        polls.description=updatedPoll.description;\r\n        polls.opinions=updatedPoll.opinions\r\n        \r\n        this.setState({\r\n            polls\r\n        })\r\n    }\r\n    deletePoll=(pollId)=>{\r\n        let polls = this.state.polls.filter(p=>p.id!== pollId);\r\n        this.setState({polls, selectedPoll:{}});\r\n\r\n    }\r\n    selectPoll=(pollId)=>{\r\n        let poll = this.state.polls.find(p=>p.id==pollId)\r\n        this.setState({\r\n            selectedPoll:poll\r\n        })\r\n    }\r\n    handleSearch=(searchTerm)=>{\r\n        this.setState({\r\n            searchTerm\r\n        });\r\n\r\n    }\r\n    performSearch=()=>{\r\n        return this.state.polls.filter(poll=>poll.title.toLowerCase().includes(this.state.searchTerm.toLowerCase()))\r\n    }\r\n    getOpinion=(response)=>{\r\n        let {polls}=this.state\r\n        let poll =polls.find(p=>p.id==response.pollId)\r\n        let option=poll.options.find(o=>o.id==response.selectedOption)\r\n        option.vote++\r\n        poll.totalVote++\r\n        let opinion={\r\n            id:shortid.generate(),\r\n            name:response.name,\r\n            selectedOption:response.selectedOption\r\n\r\n            \r\n        }\r\n        poll.opinions.push(opinion);\r\n        this.setState({polls})\r\n\r\n    }\r\n    render() {\r\n        let polls=this.performSearch();\r\n        return (\r\n            <Container className='my-5'>\r\n                <Row>\r\n                    <Col md={4}>\r\n                    <Sidebar\r\n                    polls={polls}\r\n                    handleSearch={this.handleSearch}\r\n                    selectPoll={this.selectPoll}\r\n                    searchTerm={this.state.searchTerm}\r\n                    addNewPoll={this.addNewPoll}\r\n                    \r\n                    />\r\n                    </Col>\r\n\r\n                    <Col md={8}>\r\n                    <MainContent\r\n                    poll={this.state.selectedPoll}\r\n                    getOpinion={this.getOpinion}\r\n                    deletePoll={this.deletePoll}\r\n                    updatePoll={this.updatePoll}\r\n\r\n                    />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n \nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}